@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "Result";
    TweetAPI tapi = new TweetAPI();
    BoyerMoore BM;
    KnuthMorrisPratt KMP;
    MinGetter Mini;
}

@using Tweetinvi;

<hgroup class="title">
    <h1>@Page.Title.</h1>
    <h2>Your result page.</h2>
</hgroup>

@{
    string mention = Request.Form["Mention"];
    string[][] keys = new string[4][]; // <-----

    keys[0] = Parser.parse(Request.Form["Keyword1"]);
    keys[1] = Parser.parse(Request.Form["Keyword2"]);
    keys[2] = Parser.parse(Request.Form["Keyword3"]);
    keys[3] = Parser.parse(Request.Form["Keyword4"]);
    IEnumerable<Tweetinvi.Core.Interfaces.ITweet> tweets = tapi.getTwit(mention);
    if (tweets == null)
    {
        <h3>Nothing to show here...</h3>
        <a href="~/Default.cshtml">Go Back to Home</a>
    }
    else
    {
        bool algo; //true = KMP, false = Boyer Moore
        if (Request.Form["algorithm"] == "KMP")
        {
            algo = true;
            <h3>Using KMP Algorithm</h3>
        }
        else
        {
            algo = false;
            <h3>Using Boyer Moore Algorithm</h3>
        }

        <p>@tweets.Count()</p>

        // marking and counting each tweet category

        int[] counter = new int[5]; // <-----
        int[] idxes = new int[5]; // <-----
        idxes[4] = 1000000000; // <-----


        foreach (var tweet in tweets)
        {
            for (int i = 0; i < 4; i++) // <-----
            {
                int minidx = 1000000001;
                foreach (string key in keys[i])
                {
                    if (algo)
                    {
                        KMP = new KnuthMorrisPratt(key);
                        idxes[i] = KMP.matchString(tweet.Text);
                    }
                    else
                    {
                        BM = new BoyerMoore(key);
                        idxes[i] = BM.matchString(tweet.Text);
                    }

                    if (minidx < idxes[i])
                    {
                        idxes[i] = minidx;
                    }
                    else
                    {
                        minidx = idxes[i];
                    }
                }
            }
            Mini = new MinGetter(idxes);
            counter[Mini.Get()]++;
            tweet.CreatedBy.UserDTO.IdStr = (char)Mini.Get() + tweet.CreatedBy.UserDTO.IdStr;
        }

        // printing out the result

        string marker;

        for (int i = 0; i < 5; i++) // <-----
        {
            if (i == 0)
            {
                <h2>Kategori PDAM</h2>
                <h3>Jumlah: @counter[0]</h3>
                <h3>Daftar tweet: </h3>
            }
            else if (i == 1)
            {
                <h2>Kategori Dinas</h2>
                <h3>Jumlah: @counter[1]</h3>
                <h3>Daftar tweet: </h3>
            }
            else if (i == 2)
            {
                <h2>Kategori SatPol</h2>
                <h3>Jumlah: @counter[2]</h3>
                <h3>Daftar tweet: </h3>
            }
            else if (i == 3)
            {
                <h2>Kategori PJU DBMP</h2>
                <h3>Jumlah: @counter[3]</h3>
                <h3>Daftar tweet: </h3>
            }
            else
            {
                <h2>Kategori Unknown</h2>
                <h3>Jumlah: @counter[4]</h3>
                <h3>Daftar tweet: </h3>
            }

            foreach (var tweet in tweets)
            {
                marker = tweet.CreatedBy.UserDTO.IdStr;
                if (marker[0] == (char)i)
                {
                    <div class="tweet">
                        <div class="picture">
                            
                            <img src="@tweet.CreatedBy.ProfileImageUrl" alt="@tweet.CreatedBy.ScreenName" title="@tweet.CreatedBy.ScreenName" />
                        </div>
                        <div class="info">
                            <p>@tweet.CreatedBy.Name</p>
                            <span>@tweet.CreatedBy.Description - @tweet.CreatedBy.Location </span>
                            <br />

                            <a href="https://twitter.com/statuses/@tweet.Id" class="text">
                                @tweet.Text
                            </a>
                            <div class="action">
                                @tweet.CreatedAt.AddHours(3).ToString("d/M/yyyy HH:mm:ss")
                                <a href="https://twitter.com/intent/tweet?in_reply_to=@tweet.Id" target="_blank">Reply</a> |
                                <a href="https://twitter.com/intent/retweet?tweet_id=@tweet.Id" target="_blank">Retweet</a> |
                                <a href="https://twitter.com/intent/favorite?tweet_id=@tweet.Id" target="_blank">Favorite</a>
                            </div>
                        </div>
                        <div class="clear">

                        </div>

                    </div>
                }
            }
        }
        <h3>Want to analyze again?</h3>
        <a href="~/Default.cshtml">Go Back to Home</a>
    }
}